@model ProfileViewModel
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = User.Identity.Name == Model.UserName ? Localizer["MyCollections"] : Localizer["UserCollections", Model.UserName];
}

<div class="container">
    <h4 class="mt-2 mx-2">
        @(User.Identity.Name == Model.UserName ? Localizer["MyCollections"] : Localizer["UserCollections", Model.UserName])
    </h4>
    <hr class="mb-4 mt-2 bg-light" />
    @if (User.Identity.Name == Model.UserName || User.IsInRole(Role.Admin))
    {
        <a class="btn btn-primary btn-block" asp-controller="Collection" asp-action="Add"
           asp-route-returnUrl="@UriHelper.GetDisplayUrl(Context.Request)" asp-route-userName="@Model.UserName">@Localizer["Add"]</a>
    }
    @if (Model.Collections.Count == 0)
    {
        <div class="alert alert-info text-center my-3">@(User.Identity.Name == Model.UserName ? Localizer["NoCollectionsOwner"] : Localizer["NoCollectionsUsers"]) @(User.Identity.Name == Model.UserName || User.IsInRole(Role.Admin) ? Localizer["YouCanAdd"].Value : string.Empty)</div>
    }
    else
    {
        <div class="card-columns py-3">
            @foreach (var collection in Model.Collections)
            {
                <div class="card shadow-sm">
                    @if (!string.IsNullOrEmpty(collection.ImagePath))
                    {
                        <a asp-controller="Profile" asp-action="Collection" asp-route-collectionId="@collection.Id" asp-route-returnUrl="@UriHelper.GetDisplayUrl(Context.Request)">
                            <img class="bd-placeholder-img card-img-top shadow-sm" src="@collection.ImagePath" focusable="false" role="img">
                        </a>
                    }
                    <div class="card-body">
                        <h5 class="card-title">
                            <a class="card-link" asp-controller="Profile" asp-action="Collection"
                               asp-route-collectionId="@collection.Id" asp-route-returnUrl="@UriHelper.GetDisplayUrl(Context.Request)">@collection.Name (@collection.Theme.Name)</a>
                        </h5>
                        @if (!string.IsNullOrEmpty(collection.Description))
                        {
                            <hr class="bg-light"/>
                            <div class="js-markdown-element">@collection.Description</div>
                        }
                        @if (User.Identity.Name == Model.UserName || User.IsInRole(Role.Admin))
                        {
                            <button class="btn btn-outline-danger btn-block btn-sm" data-toggle="modal" data-target="@($"#modal{collection.Id}")">@Localizer["Delete"]</button>
                            <div class="modal fade" id="@($"modal{collection.Id}")" tabindex="-1" role="dialog" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">@Localizer["Delete"]...</h5>
                                            <button type="button" class="btn close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">@Localizer["DeleteCollection", collection.Name]</div>
                                        <div class="modal-footer">
                                            <a type="button" class="btn btn-danger" asp-controller="Collection" asp-action="Remove"
                                               asp-route-collectionId="@collection.Id" asp-route-returnUrl="@UriHelper.GetDisplayUrl(Context.Request)">@Localizer["Delete"]</a>
                                            <button type="button" class="btn btn-primary" data-dismiss="modal">@Localizer["Cancel"]</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="~/js/markdown.js"></script>