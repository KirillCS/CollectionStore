@model ItemViewModel
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Item", Model.Item.Name];
}

<div class="container">
    <input id="itemId" type="hidden" value="@Model.Item.Id" />
    <h4 class="mt-2 mx-2 text-wrap">@Localizer["Item", Model.Item.Name]</h4>
    <hr class="mb-4 mt-2" />
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card bg-light shadow-sm">
                <div class="card-body">
                    <h5>@Localizer["Description"]</h5>
                    <hr />
                    <div class="card-text m-1">@Localizer["Owner"]: <a class="card-link" asp-controller="Profile"
                                                                       asp-action="Index" asp-route-userName="@Model.Item.Collection.User.UserName"
                                                                       title="@Localizer["GoToProfile", Model.Item.Collection.User.UserName]">@Model.Item.Collection.User.UserName</a></div>
                    <div class="card-text m-1">@Localizer["Collection"]: <a class="card-link" asp-controller="Profile"
                                                                            asp-action="Collection" asp-route-collectionId="@Model.Item.CollectionId"
                                                                            title="@Localizer["GoToCollection", Model.Item.Collection.Name]">@Model.Item.Collection.Name</a></div>
                    @if (Model.Item.ItemTags.IsNullOrEmpty())
                    {
                        <div class="card-text">@Localizer["Tags"]: -</div>
                    }
                    else
                    {
                        <ul class="list-inline m-1">
                            <li class="list-inline-item m-0">
                                <div class="card-text">@Localizer["Tags"]:</div>
                            </li>
                            @foreach (var itemTag in Model.Item.ItemTags)
                            {
                                <li class="list-inline-item m-0">
                                    <a class="badge badge-secondary p-1" asp-controller="Search" asp-action="SearchByTag" asp-route-tagContent="@itemTag.Tag.Content">
                                        @itemTag.Tag.Content
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                    <hr />
                    @foreach (var fieldValue in Model.Item.FieldValues)
                    {
                        if (fieldValue.Field.Type.Name == "Check box")
                        {
                            <div class="card-text m-1">@fieldValue.Field.Name: @(fieldValue.Value == "checked" ? Localizer["Yes"] : Localizer["No"])</div>
                        }
                        else if (fieldValue.Field.Type.Name == "Markdown")
                        {
                            <div class="m-1">
                                <div class="card-text">@fieldValue.Field.Name</div>
                                <div class="js-markdown-element js-markdown-element-border">@fieldValue.Value</div>
                            </div>
                        }
                        else
                        {
                            <div class="card-text m-1">@fieldValue.Field.Name: @(string.IsNullOrEmpty(fieldValue.Value) ? "-" : fieldValue.Value)</div>
                        }
                    }
                    <div class="m-1 mt-3">
                        @if (Model.Item.Collection.User.UserName == User.Identity.Name || User.IsInRole(Role.Admin))
                        {
                            <button class="btn btn-outline-danger btn-sm mr-1" data-toggle="modal" data-target="#@($"modal{Model.Item.Id}")">@Localizer["Remove"]</button>
                            <div class="modal fade" id="@($"modal{Model.Item.Id}")" tabindex="-1" role="dialog" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">@Localizer["Remove"]...</h5>
                                            <button type="button" class="btn close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">@Localizer["RemoveItem", Model.Item.Name, Model.Item.Collection.Name]</div>
                                        <div class="modal-footer">
                                            <a type="button" class="btn btn-danger" asp-controller="Item" asp-action="Remove"
                                               asp-route-itemId="@Model.Item.Id" asp-route-returnUrl="@Model.ReturnUrl">@Localizer["Remove"]</a>
                                            <button type="button" class="btn btn-primary" data-dismiss="modal">@Localizer["Cancel"]</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <a class="btn btn-outline-secondary btn-sm" asp-controller="Item" asp-action="Edit"
                               asp-route-itemId="@Model.Item.Id" asp-route-returnUrl="@UriHelper.GetDisplayUrl(Context.Request)">@Localizer["Edit"]</a>
                        }
                    </div>
                </div>
            </div>
            @{ 
                bool isUserLiked = Model.Item.Likes.Any(l => l.UserId == User.FindFirst(ClaimTypes.NameIdentifier)?.Value);
            }
            <button class="btn btn-primary btn-block text-center mt-3 js-like-button" @(User.Identity.IsAuthenticated ? "" : "disabled")>
                <svg class="js-like-heart" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    @if (isUserLiked)
                    {
                        <path class="js-like-like" fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z" />
                    }
                    else
                    {
                        <path class="js-like-dislike" fill-rule="evenodd" d="M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z" />
                    }
                </svg> @Localizer["Like"] <div class="badge badge-light js-like-count-label">@Model.Item.Likes.Count</div>
            </button>
            <div class="card bg-light shadow-sm mt-3">
                <div class="card-body">
                    <h5>@Localizer["Comments"]</h5>
                    <hr />
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="form-group js-comment-form">
                            <textarea class="form-control js-comment-input" rows="4" placeholder="@Localizer["ShareYourThoughts"]"></textarea>
                            <button class="btn btn-outline-secondary btn-block mt-2 js-comment-send-button">@Localizer["Send"]</button>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center">@Localizer["LoginToWrite"]</div>
                    }
                    <div class="js-comment-block">
                        @foreach (var comment in Model.Item.Comments)
                        {
                            <hr />
                            <div class="px-2">
                                <a class="card-link font-weight-bold" asp-controller="Profile" asp-action="Index"
                                   asp-route-userName="@comment.User.UserName">@comment.User.UserName</a>
                                <div class="card-text" style="white-space: pre-wrap">@comment.Message</div>
                                <div class="card-text text-muted"><small>@comment.CreateDate.ToString("HH:mm dd.MM.yyyy")</small></div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="~/js/markdown.js"></script>
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/comment.js"></script>
<script src="~/js/like.js"></script>